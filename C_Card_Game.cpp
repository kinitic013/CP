// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&@@@@&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&@@@@&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&@@@@@@@@@@@@&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&@@&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@
// @@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@
// @@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@
// @@@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@@
// @@@@@@@@@@&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@&&@@@&&@@@&&@@&&@@@&&@@@@@@@@@@@@@@@@@@@@@&&&&&&&&@@@@@@@@@@
// @@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@&&@@@&&&@@&&@@&&@@@&&@@@@@@@@@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@
// @@@@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@@@@@@@@@&&@@@&&&&@&&@@&&@@@&&@@@@@@@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@@@@@@@&&@@@&&@&&&&@@&&@@@&&@@@@@@@@@@@@@@&&&&&&&&&@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@&&&&&&&&&&@@@@@@@@@@@&&&&&@@@&&@@&&&@@&&&&&&&@@@@@@@@@@@&&&&&&&&&&@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@&&&&&&&&&&&&&&&&@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
// @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
#include <bits/stdc++.h>
#include <ext/pb_ds/assoc_container.hpp>
#include <ext/pb_ds/tree_policy.hpp>
using namespace __gnu_pbds;
using namespace std;
#define ordered_set tree<ll, null_type, less<ll>, rb_tree_tag, tree_order_statistics_node_update>
#define ll long long
#define ff first
#define ss second
#define pb push_back
#define endl '\n'
#define mp make_pair
#define mii map<ll, ll>
#define pii pair<ll, ll>
#define vi vector<ll>
#define vvi vector<vi>
#define vb vector<bool>
#define all(x) (x).begin(), (x).end()
#define REP(i, a, b) for (ll i = a; i < b; i++)
#define MOD (ll)(1e9 + 7)
#define mod (ll)998244353
void fast()
{
    ios_base::sync_with_stdio(0);
    cin.tie(0);
    cout.tie(0);
}
vector<ll> primes;
void init() {
    vector<bool> prime(1e6+5, 1);
    prime[0] = prime[1] = 0;
    for (int i=2; i*i<=1e9; i++)
        if (prime[i]) {
            primes.push_back(i);
            for (int j=i*i; j<=1e6; j+=i)
                prime[j] = 0;
        }
}
void solve()
{
    ll n;cin>>n;
    map<ll,ll> m;
    vi arr(n);
    REP(i,0,n) cin>>arr[i];
    REP(i,0,n)
    {
        ll curr = arr[i];
        REP(j,0,primes.size())
        {
            if(curr<primes[j]) break;
            if(curr%primes[j] != 0) continue;
            if(m[primes[j]] == 1)
            {
                cout<<"YES";
                cout.flush();
                return;
            }
            m[primes[j]] = 1;
            while(curr%primes[j]==0) curr/=primes[j];
        }
        if(curr>1)
        {
            if(m[curr])
            {
                cout<<"YES";
                cout.flush();
                return;
            }
            m[curr] = 1;
        }
    }
    cout<<"NO";
    cout.flush();
    return;
}
int main()
{
    fast();
    ll t;
    cin >> t;
    init();
    while (t--)
    {
        solve();
        cout <<'\n';
    }
    return 0;
}
